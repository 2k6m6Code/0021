<PUBLIC:COMPONENT>
<PUBLIC:PROPERTY NAME="cgipath" VALUE="" />
<PUBLIC:PROPERTY NAME="interval" VALUE="3000"/>
<PUBLIC:PROPERTY NAME="text" VALUE="???" />
<!--
<PUBLIC:ATTACH EVENT="" ONEVENT="" />
-->
<PUBLIC:METHOD NAME="show" />
<PUBLIC:METHOD NAME="update" />


<SCRIPT>

//////////////////////////////////
//	User Define
//////////////////////////////////

var _textWidth = 180;
var _buttonWidth = 18;
var _attrHeight = 50;

//////////////////////////////////
//	Initial
//////////////////////////////////

var IDNum = window.document.body.getAttribute("gui.line.count");

var oDAViewer,m;
var _width = element.clientWidth;
var _height = element.clientHeight;

var _attrEnable = false;


var _percent = 0;
var _text = element.text;
var _mode = 0;

var _attrName = new Array();
var _attrValue = new Array();

for(i=0;i<8;i++){
	tmp = element.getAttribute("attr"+i);
	_attrName[i]= tmp==null ? "" : tmp;
	if(tmp!=null)
		_attrEnable = true;
}

oDAViewer = document.createElement("OBJECT");
oDAViewer.classid = "CLSID:B6FFC24C-7E13-11D0-9B47-00C04FC2F51D";
oDAViewer.style.width = _width - _buttonWidth;
oDAViewer.style.height = _height;
m = oDAViewer.pixelLibrary;

_width = _width - 2;
_height -= 2;

//"interval" should be large then 1000 and default value is 3000

if(isNaN(parseInt(element.interval)))
	element.interval = 3000;
else if(parseInt(element.interval)<1000)
	element.interval = 1000;
else
	;

if(isNaN(parseInt(IDNum)))IDNum = 0;
window.document.body.setAttribute("gui.line."+IDNum,element);
window.document.body.setAttribute("gui.line.count",IDNum+1);

//////////////////////////////////
//	Operation Function
//////////////////////////////////

function show(vPercent){

	vPercent = parseInt(vPercent);
	
	if(isNaN(vPercent)||vPercent<0)
		vPercent = 0;
	else if(vPercent>100)
		vPercent = 100;
	else
		;
	_percent = vPercent;

	if(!_attrEnable){
		oDAViewer.style.height = _height+2;
		oDAViewer.style.width = _width+2;
		oDAViewer.Image.SwitchTo(
			root.image.Transform(
				m.Translate2(
					-(_width+2)>>1,
					-(_height+2)>>1
				)
			)
		);
		
	}
	else if(_mode){
		oDAViewer.style.height = _height + 2 + _attrHeight + 2;
		
		oDAViewer.Image.SwitchTo(
			root.image.Transform(
				m.Translate2(
					-(_width+2-_buttonWidth)>>1,
					-(_height+4+_attrHeight)>>1
				)
			)
		);
	}
	else{
		oDAViewer.style.height = _height+2;
		
		oDAViewer.Image.SwitchTo(
			root.image.Transform(
				m.Translate2(
					-(_width+2-_buttonWidth)>>1,
					-(_height+2)>>1
				)
			)
		);
	}
	
	root.run(vPercent);
}

function update(){
	try{
		var xmlhttp = new ActiveXObject("Msxml2.XMLHTTP");
		xmlhttp.open("GET",element.cgipath,false);
		xmlhttp.send();
		_attrValue = xmlhttp.responseText.split(',');
		tmp = _attrValue.shift()
		element.show(tmp);
	}
	catch(e){
		;
	}
}

function modeChange(){
	if(this.innerText=='+'){
		_mode = 1;
		this.innerText='-';
	}
	else{
		_mode = 0;
		this.innerText='+';
	}
	
	element.show(_percent);
}

//////////////////////////////////
//	DAIMG_ROOT
//////////////////////////////////

function DAIMG_ROOT(wd,ht){

	this.wd = wd;
	this.ht = ht;
	
	this.back = new DAIMG_BACKGROUND(wd,ht);
	this.text = new DAIMG_STRING(_textWidth,_height,"",255,255,255,14,1);
	this.line = new DAIMG_LINE(wd-_textWidth-2,ht-6);
	this.attrs = new DAIMG_ATTRS(wd,_attrHeight);
	this.image = m.OverlayArray(
		[
			this.text.image.Transform(m.Translate2(0,0)),
			this.line.image.Transform(m.Translate2(_textWidth-1,3)),
			this.back.image.Transform(m.Translate2(0,0)),
			this.attrs.image.Transform(m.Translate2(0,_height+2))
		]
	);
}

function DAIMG_ROOT.prototype.run(vPercent){
	this.back.run();
	this.text.run(_text,255,255,255,14,1);
	this.line.run(vPercent);
	this.attrs.run();
}

//////////////////////////////////
//	DAIMG_BACKGROUND
//////////////////////////////////

function DAIMG_BACKGROUND(wd,ht){
	
	this.wd = wd;
	this.ht = ht;
	
	this.image = m.RoundRect(
		wd,
		ht,
		10,
		10
	).Fill(
		m.defaultLineStyle.color(
			m.colorRgb255(
				180,
				180,
				180
			)
		),
		m.SolidColorImage(m.Gray)
	).Transform(
		m.Translate2(
			wd>>1,
			ht>>1
		)
	);
}

function DAIMG_BACKGROUND.prototype.run(){
	return this;
}

//////////////////////////////////
//	DAIMG_LINE
//////////////////////////////////

function DAIMG_LINE(wd,ht){
	
	this.wd = wd;
	this.ht = ht;
	
	this.text = new DAIMG_STRING(wd,ht,"",255,255,255,14,1);
	
	this.back = m.RoundRect(
		wd,
		ht,
		5,
		5
	).Fill(
		m.defaultLineStyle,
		m.Overlay(
			m.GradientPolygon(
				[
					m.Point2(-(wd>>1),-(ht>>1)),
					m.Point2(0,-(ht>>1)),
					m.Point2(0>>1,ht>>1),
					m.Point2(-(wd>>1),ht>>1)
				],
				[	
					m.GREEN,
					m.YELLOW,
					m.YELLOW,
					m.GREEN
				]
			),
			m.GradientPolygon(
				[
					m.Point2(0,-(ht>>1)),
					m.Point2(wd>>1,-(ht>>1)),
					m.Point2(wd>>1,ht>>1),
					m.Point2(0>>1,ht>>1)
				],
				[
					m.YELLOW,
					m.RED,
					m.RED,
					m.YELLOW
				]
			)
		)
	).Transform(
		m.Translate2(
			wd>>1,
			ht>>1
		)
	);
	
	
	this.line = m.ModifiableBehavior(
		m.GradientPolygon(
			[
				m.Point2(-(wd>>1),-(ht>>1)),
				m.Point2(wd>>1,-(ht>>1)),
				m.Point2(wd>>1,ht>>1),
				m.Point2(-(wd>>1),ht>>1)
			],
			[
				m.BLACK,
				m.BLACK,
				m.BLACK,
				m.BLACK
			]
		)
	);
	
	this.line2 = m.RoundRect(
		wd,
		ht,
		5,
		5
	).Fill(
		m.defaultLineStyle.color(
			m.colorRgb255(
				255,
				255,
				255
			)
		),
		this.line
	).Transform(
		m.Translate2(
			wd>>1,
			ht>>1
		)
	);
		
	this.image = m.OverlayArray(
		[
			this.text.image,
			this.line2,
			this.back
		]
	);
}
function DAIMG_LINE.prototype.run(vPercent){

	this.text.run(vPercent+"%",128,128,128,14,1);
	
	vPercent = vPercent / 100;
	
	this.line.SwitchTo(
		m.GradientPolygon(
			[
				m.Point2((vPercent-0.5)*this.wd,-(this.ht>>1)),
				m.Point2(this.wd,-(this.ht>>1)),
				m.Point2(this.wd,this.ht>>1),
				m.Point2((vPercent-0.5)*this.wd,this.ht>>1)
			],
			[
				m.BLACK,
				m.BLACK,
				m.BLACK,
				m.BLACK
			]
		)
	);
}

//////////////////////////////////
//	DAIMG_ATTRS
//////////////////////////////////

function DAIMG_ATTRS(wd,ht){
	
	this.wd = wd;
	this.ht = ht;
		
	this.attr0 = new DAIMG_ATTR((wd-4)>>1,(ht-4)>>2,_attrName[0]);
	this.attr1 = new DAIMG_ATTR((wd-4)>>1,(ht-4)>>2,_attrName[1]);
	this.attr2 = new DAIMG_ATTR((wd-4)>>1,(ht-4)>>2,_attrName[2]);
	this.attr3 = new DAIMG_ATTR((wd-4)>>1,(ht-4)>>2,_attrName[3]);
	this.attr4 = new DAIMG_ATTR((wd-4)>>1,(ht-4)>>2,_attrName[4]);
	this.attr5 = new DAIMG_ATTR((wd-4)>>1,(ht-4)>>2,_attrName[5]);
	this.attr6 = new DAIMG_ATTR((wd-4)>>1,(ht-4)>>2,_attrName[6]);
	this.attr7 = new DAIMG_ATTR((wd-4)>>1,(ht-4)>>2,_attrName[7]);
	
	this.back = new DAIMG_BACKGROUND(wd,ht);
	
	var x = 2,y = 2;
	var dx = (wd-4)>>1,dy = (ht-4)>>2;
	
	this.image = m.OverlayArray(
		[
			this.attr0.image.Transform(m.Translate2(x,y)),
			this.attr1.image.Transform(m.Translate2(x+dx,y)),
			this.attr2.image.Transform(m.Translate2(x,y+dy)),
			this.attr3.image.Transform(m.Translate2(x+dx,y+dy)),
			this.attr4.image.Transform(m.Translate2(x,y+dy+dy)),
			this.attr5.image.Transform(m.Translate2(x+dx,y+dy+dy)),
			this.attr6.image.Transform(m.Translate2(x,y+dy+dy+dy)),
			this.attr7.image.Transform(m.Translate2(x+dx,y+dy+dy+dy)),
			this.back.image
		]
	);
}

function DAIMG_ATTRS.prototype.run(){
	
	this.attr0.run(_attrValue[0]);
	this.attr1.run(_attrValue[1]);
	this.attr2.run(_attrValue[2]);
	this.attr3.run(_attrValue[3]);
	this.attr4.run(_attrValue[4]);
	this.attr5.run(_attrValue[5]);
	this.attr6.run(_attrValue[6]);
	this.attr7.run(_attrValue[7]);
	
}

//////////////////////////////////
//	DAIMG_ATTR
//////////////////////////////////

function DAIMG_ATTR(wd,ht,vText){
	this.wd = wd;
	this.ht = ht;
	this.name = new DAIMG_STRING(wd>>1,ht,vText,255,255,255,12,1);
	this.slice = new DAIMG_STRING(10,ht,'>',255,255,255,8,0);
	this.value = new DAIMG_STRING(wd>>1,ht,"",255,255,255,12,0);
	
	this.image = m.OverlayArray(
		[
			this.name.image,
			this.slice.image.Transform(m.Translate2(wd>>1,0)),
			this.value.image.Transform(m.Translate2(wd>>1,0))
		]
	);
}
function DAIMG_ATTR.prototype.run(vText){
	this.value.run(vText,255,255,255,12,0);
}

//////////////////////////////////
//	DAIMG_STRING
//////////////////////////////////

function DAIMG_STRING(wd,ht,vText,vR,vG,vB,vSize,vBold){
	
	this.wd = wd;
	this.ht = ht;

	var tmp = m.defaultFont.size(
		vSize
	).Family(
		"Verdana"
	).color(
		m.colorRgb255(
			vR,
			vG,
			vB
		)
	);
	
	tmp = m.StringImage(
		vText,
		vBold ? tmp.bold() : tmp
	).Transform(
		m.Translate2(
			this.wd>>1,
			(this.ht>>1)+6
		)
	);
	
	this.image = m.ModifiableBehavior(tmp);

}

function DAIMG_STRING.prototype.run(vText,vR,vG,vB,vSize,vBold){

	var tmp = m.defaultFont.size(
		vSize
	).Family(
		"Verdana"
	).color(
		m.colorRgb255(
			vR,
			vG,
			vB
		)
	);
	
	tmp = m.StringImage(
		vText,
		vBold ? tmp.bold() : tmp
	).Transform(
		m.Translate2(
			this.wd>>1,
			(this.ht>>1)+6
		)
	);
	
	
	this.image.SwitchTo(tmp);
}

//////////////////////////////////
//	BUTTON
//////////////////////////////////

var oBut = document.createElement("BUTTON")
oBut.innerText = "+";
oBut.style.width=_buttonWidth;
oBut.style.height=_buttonWidth;
oBut.style.cursor="hand";
oBut.style.border="1 ridge threedface";
oBut.style.filter="progid:DXImageTransform.Microsoft.Gradient(gradientType=0,startColorStr=threedface,endColorStr=white);"
oBut.onclick = modeChange;

//////////////////////////////////
//	TABLE
//////////////////////////////////

oTAB = document.createElement("TABLE");
oTAB.cellSpacing=0;
oTAB.cellPadding=0;
oTR = oTAB.insertRow();
if(_attrEnable)
	oTR.insertCell().appendChild(oBut);
oTR.insertCell().appendChild(oDAViewer);

element.appendChild(oTAB);

//////////////////////////////////
//	Final Image
//////////////////////////////////

if(_attrEnable)
	var root = new DAIMG_ROOT(_width - _buttonWidth,_height);
else
	var root = new DAIMG_ROOT(_width,_height);
//oDAViewer.Image = m.ModifiableBehavior(root.image.Transform(m.Translate2(-(_width-_buttonWidth)>>1,-_height>>1)));
oDAViewer.Image = m.ModifiableBehavior(m.EmptyImage);
oDAViewer.start();


//////////////////////////////////
//	set interval
//////////////////////////////////

element.show();

setInterval("window.document.body.getAttribute('gui.line."+IDNum+"').update()",parseInt(element.interval));

</SCRIPT>

</PUBLIC:COMPONENT>
